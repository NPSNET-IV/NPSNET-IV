
#ifndef __NPS_DEVICE__
#define __NPS_DEVICE__

#include <gl/device.h>
#include <pfutil.h>

enum NPS_Input_Device
   { NPS_NO_INPUT, NPS_KEYBOARD, NPS_SPACEBALL, NPS_FCS, NPS_KAFLIGHT,
     NPS_FLYBOX, NPS_LEATHER_FLYBOX, NPS_BASIC_PANEL, NPS_SHIP_PANEL, 
     NPS_SUB_PANEL, NPS_TESTPORT, NPS_UNIPORT, NPS_TREADPORT, 
     NPS_UPPERBODY, NPS_FAKESPACE, NPS_ODT, NPS_LWS, NPS_NUM_DEVICE_TYPES };

// New input constants for NPS defined devices, valuators and psuedo
//   devices for internal queues.
#define FIRST_NPS_BUTTON        USERBUTOFFSET+1
#define FIRST_NPS_VALUATOR      USERVALOFFSET+1
#define FIRST_NPS_PSEUDO_DEVICE USERPSEUDOOFFSET+1
// End device definitions

enum NPS_BUTTON
   { NPS_BUTTON_0 = 0,   NPS_STCK_TRIGGER = 0, NPS_MOUSE_LEFT_BUTTON = 0,
        NPS_IPORT_TRIGGER = 0, NPS_FIRE1_BUTTON = 0, NPS_LW_TRIGGER = 0,
     NPS_BUTTON_1 = 1,   NPS_STCK_TOP_BUTTON = 1, NPS_FIRE2_BUTTON = 1,
        NPS_MOMLEFT_BUTTON = 1, NPS_MOUSE_RIGHT_BUTTON = 1,
         NPS_IPORT_TRIGGER_AUX = 1, NPS_FS_BUTTON_1 = 1,
     NPS_BUTTON_2 = 2,   NPS_STCK_MID_BUTTON = 2,
        NPS_MOMRIGHT_BUTTON = 2, NPS_MOUSE_MIDDLE_BUTTON = 2,
        NPS_FIRE3_BUTTON = 2, NPS_FS_BUTTON_2 = 2,
     NPS_BUTTON_3 = 3,   NPS_STCK_BOT_BUTTON = 3,
     NPS_BUTTON_4 = 4,   NPS_THRTL_BUTTON_1 = 4, NPS_LW_LASER = 4,
     NPS_BUTTON_5 = 5,   NPS_THRTL_BUTTON_2 = 5, NPS_LW_VIDEO = 5,
     NPS_BUTTON_6 = 6,   NPS_THRTL_BUTTON_3 = 6,
     NPS_BUTTON_7 = 7,   NPS_THRTL_BUTTON_4 = 7,
     NPS_BUTTON_8 = 8,   NPS_THRTL_BUTTON_5 = 8,
     NPS_BUTTON_9 = 9,   NPS_THRTL_BUTTON_6 = 9,
     NPS_BUTTON_10 = 10, NPS_THRTL_BUTTON_7 = 10,

     NPS_NULL = 20, NPS_MIN_KEY = 20, PFU_MIN_DEV = 20, 
     NPS_F1KEY = 21,
     NPS_F2KEY = 22,
     NPS_F3KEY = 23,
     NPS_F4KEY = 24,
     NPS_F5KEY = 25,
     NPS_F6KEY = 26,
     NPS_F7KEY = 27,
     NPS_F8KEY = 28,
     NPS_F9KEY = 29,
     NPS_F10KEY = 30,
     NPS_F11KEY = 31,
     NPS_F12KEY = 32,
     NPS_KEYBD = 33,
     NPS_REDRAW = 34,
     NPS_WINQUIT = 35,
     NPS_LEFTARROWKEY = 37,
     NPS_DOWNARROWKEY = 38,
     NPS_RIGHTARROWKEY = 39,
     NPS_UPARROWKEY = 40,
     NPS_PRINTSCREENKEY = 41, PFU_MAX_DEV = 41,

     NPS_INSERTKEY = 50, GL_MIN_KEY = 50, GL_MIN_DEV = 50,
     NPS_DELETEKEY = 51,
     NPS_HOMEKEY = 52,
     NPS_ENDKEY = 53,
     NPS_PAGEUPKEY = 54,
     NPS_PAGEDOWNKEY = 55,
     NPS_PAUSEKEY = 56,
     NPS_PAD0KEY = 57, NPS_PADINSKEY = 57,
     NPS_PAD1KEY = 58, NPS_PADENDKEY = 58,
     NPS_PAD2KEY = 59, NPS_PADDOWNARROWKEY = 59,
     NPS_PAD3KEY = 60, NPS_PADPGDNKEY = 60,
     NPS_PAD4KEY = 61, NPS_PADLEFTARROWKEY = 61,
     NPS_PAD5KEY = 62, NPS_PADCENTERKEY = 62,
     NPS_PAD6KEY = 63, NPS_PADRIGHTARROWKEY = 63,
     NPS_PAD7KEY = 64, NPS_PADHOMEKEY = 64,
     NPS_PAD8KEY = 65, NPS_PADUPARROWKEY = 65,
     NPS_PAD9KEY = 66, NPS_PADPGUPKEY = 66,
     NPS_PADPERIODKEY = 67, NPS_PADDELKEY = 67,
     GL_MAX_KEY = 68, GL_MAX_DEV = 68,

     NPS_SHIFTKEY = 70,
     NPS_CONTROLKEY = 71,
     NPS_ALTKEY = 72,  NPS_MAX_KEY = 72
 };

enum NPS_VALUATOR
   { NPS_VALUATOR_0 = 0,   NPS_STCK_HORIZONTAL = 0, NPS_MOUSE_X = 0,
     NPS_VALUATOR_1 = 1,   NPS_STCK_VERTICAL = 1, NPS_MOUSE_Y = 1,
     NPS_VALUATOR_2 = 2,   NPS_STCK_TWIST = 2, NPS_IPORT_TWIST = 2,
        NPS_ODT_HEADING = 2,
     NPS_VALUATOR_3 = 3,   NPS_STCK = 3,
     NPS_VALUATOR_4 = 4,   NPS_THRTL = 4,
     NPS_VALUATOR_5 = 5,   NPS_THRTL_LEFT = 5,  NPS_LEVER_LEFT = 5,
     NPS_VALUATOR_6 = 6,   NPS_THRTL_RIGHT = 6, NPS_LEVER_RIGHT = 6,
     NPS_VALUATOR_7 = 7,   NPS_RUDDER = 7,
     NPS_VALUATOR_8 = 8,   NPS_OPERATION = 8 };

enum NPS_SWITCH
   { NPS_SWITCH_0 = 0,  NPS_SWITCH_TOPLEFT = 0,
     NPS_SWITCH_1 = 1,  NPS_SWITCH_TOPRIGHT = 1,
     NPS_SWITCH_2 = 2,  NPS_SWITCH_MIDLEFT = 2,
     NPS_SWITCH_3 = 3,  NPS_SWITCH_MIDRIGHT = 3,
     NPS_SWITCH_4 = 4,  NPS_SWITCH_BOTLEFT = 4,
     NPS_SWITCH_5 = 5,  NPS_SWITCH_BOTRIGHT = 5 };

enum NPS_SWITCH_VAL
   { NPS_SWITCH_VAL_0 = 0x00, NPS_SWITCH_CENTER = 0x00,
        NPS_SWITCH_MIDDLE = 0x00,
     NPS_SWITCH_VAL_1 = 0x01, NPS_SWITCH_UP = 0x01,
        NPS_SWITCH_RELEASED = 0x01,
     NPS_SWITCH_VAL_2 = 0x02, NPS_SWITCH_DOWN = 0x02,
        NPS_SWITCH_PRESSED = 0x02,
     NPS_SWITCH_VAL_3 = 0x04, NPS_SWITCH_LEFT = 0x04,
     NPS_SWITCH_VAL_4 = 0x08, NPS_SWITCH_RIGHT = 0x08,
     NPS_SWITCH_VAL_5 = 0x10, NPS_SWITCH_FORWARD = 0x10,
     NPS_SWITCH_VAL_6 = 0x20, NPS_SWITCH_BACKWARD = 0x20 };

enum NPS_STATE {
   NPS_STATE_IPORT 
};

enum NPS_CALIBRATION
   { NPS_CAL = 0 , NPS_RESTING_STATE = 0,
     NPS_DEAD_ZONE = 1,
     NPS_SCALE_VALUE = 2,
     NPS_UB_PROMPT = 3,
     NPS_UB_DELAY = 4,
     NPS_PAUSE = 5,
     NPS_RESUME = 6 };

enum NPS_MULTIVAL
   { NPS_MV_MOUSE_LOCATION = 0,
     NPS_MV_MOUSE_CHAN_LOCATION = 1,
     NPS_MV_MOUSE_DOWN_SCREEN_LOCATION = 2,
     NPS_MV_MOUSE_DOWN_NORM_LOCATION = 3,
     NPS_MV_IPORT_SEND = 4,
     NPS_MV_IPORT_RECEIVE = 5,
     NPS_MV_IPORT_VELOCITY = 6,
     NPS_MV_UPPERBODY = 7,
     NPS_MV_RIFLE = 8,
     NPS_MV_RIGHTHAND = 9,
     NPS_MV_LEFTHAND = 10,
     NPS_MV_HULL = 11,
     NPS_MV_TARGET_RIFLE = 12,
     NPS_MV_IPORT_LOOK = 13,
     NPS_MV_IPORT_RIFLE = 14,
     NPS_MV_FS_COORD = 15,
     NPS_MV_ODT_VELOCITY = 16,
     NPS_LW_LAZE = 17,
     NPS_LW_ENTITY = 18
 };

#define CTRL_A char(1)
#define CTRL_B char(2)
#define CTRL_C char(3)
#define CTRL_D char(4)
#define CTRL_E char(5)
#define CTRL_F char(6)
#define CTRL_G char(7)
#define CTRL_H char(8)
#define CTRL_I char(9)
#define CTRL_J char(10)
#define CTRL_K char(11)
#define CTRL_L char(12)
#define CTRL_M char(13)
#define CTRL_N char(14)
#define CTRL_O char(15)
#define CTRL_P char(16)
#define CTRL_Q char(17)
#define CTRL_R char(18)
#define CTRL_S char(19)
#define CTRL_T char(20)
#define CTRL_U char(21)
#define CTRL_V char(22)
#define CTRL_W char(23)
#define CTRL_X char(24)
#define CTRL_Y char(25)
#define CTRL_Z char(26)

#define NPS_ESCKEY char(27)
#define NPS_TABKEY char(9)

#define INTERUPT_ASCII    CTRL_C
#define BACKSPACE_ASCII   CTRL_H
#define TAB_ASCII         CTRL_I
#define ENTER_ASCII       CTRL_M

#endif
