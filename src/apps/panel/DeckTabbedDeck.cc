
/////////////////////////////////////////////////////////////
//
// Source file for DeckTabbedDeck
//
//    This file is generated by RapidApp
//
//    This class is derived from VkTabbedDeck which 
//    implements the user interface created in 
//    the interface builder. This class contains virtual
//    functions that are called from the user interface.
//
//    When you modify this source, limit your changes to 
//    modifying the emtpy virtual functions. You can also add
//    new functions below the "//--- End generated code section" markers
//
//    This will allow the builder to integrate changes more easily
//
//    This class is a ViewKit user interface "component".
//    For more information on how components are used, see the
//    "ViewKit Programmers' Manual", and the RapidApp
//    User's Guide.
/////////////////////////////////////////////////////////////

#include "DeckTabbedDeck.h"
#include <Vk/VkDeck.h>

#include "VkTabbedDeck.h" 


// Externally defined classes referenced by this class:

#include "Helm.h"
#include "Ood.h"
#include "Weaps.h"
extern void VkUnimplemented(Widget, const char *);


//---- End generated headers


//---- DeckTabbedDeck Constructor

DeckTabbedDeck::DeckTabbedDeck(const char *name, Widget parent) : 
                   VkTabbedDeck(name, parent) 
{ 
    _helm = new Helm( "helm", _vkdeck->baseWidget()  );
    _helm->show();

    _ood = new Ood( "ood", _vkdeck->baseWidget()  );
    _ood->show();

    _weaps = new Weaps( "weaps", _vkdeck->baseWidget()  );
    _weaps->show();


    registerChild ( _helm, "helm");
    registerChild ( _ood, "ood");
    registerChild ( _weaps, "weaps");


}


DeckTabbedDeck::~DeckTabbedDeck()
{

}


const char * DeckTabbedDeck::className() // classname
{
    return ("DeckTabbedDeck");
} // End className()


void DeckTabbedDeck::setParent( VkSimpleWindow  * parent )
{
    // Store a pointer to the parent VkWindow. This can
    // be useful for accessing the menubar from this class.


    _parent = parent;


} // End DeckTabbedDeck::setParent()


void DeckTabbedDeck::update()
{
  _helm->update();
  _ood->update();
  _weaps->update();
}
