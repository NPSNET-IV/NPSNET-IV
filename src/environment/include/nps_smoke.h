// File: <nps_smoke.h>

/*
 * Copyright (c) 1995,
 *    Naval Postgraduate School
 *    Computer Graphics and Video Laboratory
 *    NPSNET Research Group
 *    npsnet@cs.nps.navy.mil
 *
 *
 *    Permission to use, copy, and modify this software and its
 * documentation for any non-commercial purpose is hereby granted
 * without fee, provided that (i) the above copyright notices and the
 * following permission notices appear in ALL copies of the software
 * and related documentation, and (ii) The Naval Postgraduate School
 * Computer Graphics and Video Laboratory and the NPSNET Research Group
 * be given written credit in your software's written documentation and
 * be given graphical credit on any start-up/credit screen your 
 * software generates.
 *    This restriction helps justify our research efforts to the
 * sponsors who fund our research.
 *
 *    Do not redistribute this code without the express written
 * consent of the NPSNET Research Group. (E-mail communication and our
 * confirmation qualifies as written permission.) As stated above, this 
 * restriction helps justify our research efforts to the sponsors who
 * fund our research.
 *
 *    This software was designed and implemented at U.S. Government
 * expense and by employees of the U.S. Government.  It is illegal
 * to charge any U.S. Government agency for its partial or full use.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY
 * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 * 
 * E-Mail addresses:
 *    npsnet@cs.nps.navy.mil
 *       General code questions, concerns, comments, requests for
 *       distributions and documentation, and bug reports.
 *    npsnet-info@cs.nps.navy.mil
 *       Contact principle investigators.
 *       Overall research project information and funding.
 *       Requests for demonstations.
 *
 * Thank you to our sponsors:  ARL, STRICOM, TRAC, ARPA and DMSO.
 */


#ifndef __NPS_ENVIRON__
#define __NPS_ENVIRON__

#include <pf.h>
#include "environment_const.h"

pfGroup *findnode_smoke(pfVec3 loc);


//---------------------------------------------------------
//place this at the end of the graphics loop to generate the
//plumes. 

void generate_all_fire();

 

//---------------------------------------------------------
//this function call is used to tie a plume to a location
//it returns the index into array containing the information
//about the plume being generated by making this call
//length of time is the lifetime of the plume in seconds.
//if lengthoftime < 0. the plume will last for 315360000 
//seconds 

int use_next_fire_plume(float x, float y, float z, 
    float lengthoftime, int color = BLACK_SMOKE );

//--------------------------------------------------------
//this sunction call is used to turn off a plume when it is 
//actiely billowing.  if successfull 1 is return otherwise
//zero is returned
int shutoffplumenumber(int index, int color = BLACK_SMOKE);

 
//----------------------------------------------------------
//this function builds the pf-structure that is used by all the 
//plumes as well as initializing all the values of the puffs
//and pf groups, switches and DCS nodes.  The parameter of plumes
//is the total of unique plumes the user has and can be 
//used at any one time
//
//                          flame group
//				 |
//				 |
//			       /   \
//			      /     \
//			  plume ...
//			  switch
//			    |
//			    | 
//			  plume
//			  DCS   
//			 /... ...\
//			/         \
//		     puff        puff
//		     switch      switch
//		       |           |
//		       |           |
//		     puff        puff
//		     DCS   ....	 DCS
//		       \          /      ....
//		        \        /      /
//			 \      /      /
//			  image  -----/
//			  group  	
//
							
void initialize_fire(int number_of_plumes, float winddir,
	float windspd, int color = BLACK_SMOKE);

void dump_smoke();

//---------------------------------------------------------
//this divides up a terrain so that culling can be used to 
//increase the efficiency of the program.  it returns a 
//pointer to a tree of nodes that smoke plumes are attached
//to
//---------------------------------------------------------
pfGroup *deviy_up_for_smoke();

#endif
